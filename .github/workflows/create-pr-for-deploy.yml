name: Create PR for Deploy

on:
  workflow_dispatch:
        
jobs:
  create-pr:
    name: Create PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      

      - name: Detect Changed Files
        id: detect-changes
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $changed_files"

          if echo "$changed_files" | grep -E "values.*qa.*\.yaml"; then
            echo "qa_values_changed=true" >> $GITHUB_ENV
          else
            echo "qa_values_changed=false" >> $GITHUB_ENV
          fi

      - name: Get short commit sha
        id: commit-sha
        run: |
          sha=${{ github.event.client_payload.sha }}
          echo ${sha}
          sha_short=${sha:0:7}
          echo "Short commit sha: ${sha_short}"
          echo "sha_short=$sha_short" >> "$GITHUB_OUTPUT"

      - name: Create branch
        id: create-branch
        run: |
          branch_name="deploy/${{ github.event.client_payload.service }}-${{ github.event.client_payload.env }}-${{ steps.commit-sha.outputs.sha_short }}"
          git checkout -b "$branch_name"
          echo "branch_name=$branch_name" >> "$GITHUB_OUTPUT"

      - name: Modify file
        run: |
          echo "Nueva línea añadida" >> output.txt

      - name: Setup Git
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name 'jabl01'
          git config --global user.email 'jabl01@betssongroup.com'
          git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/jabl01/dummy-repo-simulate-argocd.git
          git ls-remote origin

      - name: Commit and Push Changes
        run: |
          git add --all
          git commit -m "Update docker image tag for ${{ github.event.client_payload.env }} environment" || echo "No changes to commit"
          git push origin HEAD:refs/heads/${{ steps.create-branch.outputs.branch_name }}

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          gh pr create --title "Deploy ${{ github.event.client_payload.service }} to ${{ github.event.client_payload.env }}" \
                       --body "Deployment triggered by ${{ github.actor }}" \
                       --head ${{ steps.create-branch.outputs.branch_name }}

      - name: Approve Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          pr_url=$(gh pr view --json url -q '.url')
          if [ -z "$pr_url" ]; then
            echo "No pull request found for branch ${{ steps.create-branch.outputs.branch_name }}"
            exit 1
          fi
          gh pr review $pr_url --approve